module.exports = function (router, db, async,fs) {  const asyncForEach = async (array, callback) => {    for (let index = 0; index < array.length; index++) {      await callback(array[index], index, array);    }  };  router.post("/addproducttocart",async (req, res)=> {  var count={};     if(req.body.products.length>0){  let productItem = req.body.products; await asyncForEach(productItem, async (item, i) => { var existcart =await existcartCheckingHandler(productItem[i]); console.log(existcart); var existproduct =await existproductCheckingHandler(productItem[i],existcart.cartId) console.log(existproduct); var product_count=0; if(existproduct.AlreadyInserted) {    await productItemupdatingHandler(productItem[i],existproduct.CartdetailId,existproduct.cartId)   product_count = await noofitems(existproduct.cartId); count.noofitems = product_count[0].noofitems; }else{    await productItemAddingHandler(productItem[i],existcart.cartId);  product_count = await noofitems(existcart.cartId); count.noofitems = product_count[0].noofitems;}     if(i == productItem.length - 1){  res.send({ status: 1, msg: "Product added to the cart Successfully", data: [{productcount:count}]}); }  })}else{  res.send({ status: 0, msg: "Product added to the cart is failed", data: [] });}})var existcartCheckingHandler=(requestData)=>{return new Promise((resolve,reject) =>{  var query = "SELECT `id` As cartId, `user_id`, `cart_status` FROM `trn_cart` WHERE user_id='"+requestData.user_id+"' and cart_status='"+requestData.cart_status+"';";    console.log(query);    db.query(query, async (err,response)=>{        if(err){            console.log(err);            reject(err);        }else{          console.log(response)            if(response.length>0){                             resolve({cartId:response[0].cartId});                                      }else{              let ShoppingcartAdding = await ShoppingcartAddingHandler(requestData)                resolve({cartId:ShoppingcartAdding});            }        }    })})}function ShoppingcartAddingHandler(requestData){return new Promise((resolve,reject)=>{  var query=       "INSERT INTO `trn_cart`(`user_id`, `created_on`, `cart_status`) VALUES   ('" +      requestData.user_id +      "',Now(),'" +      requestData.cart_status +       "')";       console.log(query);     db.query(query,async function (err, response) {       if (err) {          console.log(err);            reject(err);       } else {        console.log("response", response);         if (response.affectedRows != 0) {          let cartId = response.insertId;          resolve(cartId);        }else{          resolve(0)        }        }      })     })}var existproductCheckingHandler=(requestData,cartId)=>{return new Promise((resolve,reject) =>{    var query = "SELECT `id` As CartdetailId, `cart_id` As cartId, `product_id` FROM `trn_cart_details` WHERE cart_id='"+cartId+"' and product_id='"+requestData.product_id+"';";    console.log(query);    db.query(query, async (err,response)=>{        if(err){            console.log(err);            reject(err);        }else{          console.log(response.length)            if(response.length >0){                                          resolve({AlreadyInserted:true,CartdetailId:response[0].CartdetailId,cartId:response[0].cartId});                                      }else{                           resolve({AlreadyInserted:false,cartId:cartId});                           }        }    })})}var productItemupdatingHandler=(data,CartdetailId,cartId)=> {  return new Promise((resolve, reject)=>{  var query=    "select quantity, amount  from trn_cart_details where id='"+CartdetailId+"' and cart_id='"+cartId+"';";              console.log(query);     db.query(query,async function (err, response) {       if (err) {          console.log(err);            reject(err);       } else {        console.log("response", response);         if (response.length > 0) {          let Quantity = response[0].quantity;          let amt=response[0].amount;          query = ""    query +=  "Update `trn_cart_details` set `quantity`=("+Quantity+")+("+data.quantity+"), `unit_rate`='"+data.unit_rate+"',`amount`=("+amt+")+("+data.amount+") where id='"+CartdetailId+"';";      query +=  "Update `mas_product` set `product_quantity`=(select `mas_product`.`product_quantity` from mas_product where id='"+data.product_id +"')-(("+Quantity+")+("+data.quantity+") where id='"+data.product_id +"';";        db.query(query, (error, resp)=>{       if(error) {          console.log(error);         reject(error)        return      }      else{       resolve(true)             return       }    })        }else{          resolve(0)        }        }      })     })}   var productItemAddingHandler=(data,cartId)=> {  return new Promise((resolve, reject)=>{        var query = "";       query  +="INSERT INTO `trn_cart_details`(`cart_id`, `product_id`, `quantity`, `unit_rate`, `amount`, `created_by`, `created_on` ) VALUES('"+cartId+"','"+data.product_id+"','"+data.quantity+"','"+data.unit_rate+"','"+data.amount+"','"+data.user_id+"',Now());";        query +=  "Update `mas_product` set `product_quantity`=(select `mas_product`.`product_quantity` from mas_product where id='"+data.product_id +"')-("+data.quantity+") where id='"+data.product_id +"';";       db.query(query, (err, response)=>{       if(err) {         console.log(err);         reject(err)        return      }      else{      resolve(true)              return       }    })   }) }function noofitems(cartId) {    return new Promise((resolve) => {      var query ="";                query +=  " select count(id) As noofitems from(select id from trn_cart_details where cart_id='"+cartId+"')as tbl";                             db.query(query, function (err, response) {        if (err) {          console.log(err.message);        } else {          if (response.length > 0) {            console.log(response);            resolve(response);          } else {            resolve([]);          }        }      });    });  }//***************Products Added/updated to the cart Functionality End***************************************//router.delete('/deleteproductsfromcart',(req,res)=>{  var reqparams=req.body;  var query ="";        query += "delete from trn_cart_details Where trn_cart_details.id = '"+reqparams.id+ "';";      // query +=  "Update `mas_product` set `product_quantity`=(select `mas_product`.`product_quantity` from mas_product where mas_product.id='"+reqparams.product_id +"')+("+reqparams.quantity+")), modified_on=Now() where mas_product.id='"+reqparams.product_id +"';";          db.query(query,function(err,response){               if(err){                  console.log(err);                res.send({ status: 0, msg: 'Failed', data: err });           }else{                    res.send({ status: 1, msg: 'Deleted', data: response });               }            });                  });    return router;  }